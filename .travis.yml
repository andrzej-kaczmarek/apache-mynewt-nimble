# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

os: linux
dist: jammy
language: shell

git:
  depth: 1

cache:
  ccache: true
  directories:
    - $HOME/.ccache
    - $HOME/bsim

before_install:
  - export PATH=/usr/lib/ccache:$PATH

_install-build: &install-build
  # install newt
  - eval "$(gimme 1.16)"
  - go version
  - go get mynewt.apache.org/newt/newt@latest
  - newt version
  # install toolchain
  - mkdir -p ~/gcc-arm-none-eabi
  - wget -qO- "https://developer.arm.com/-/media/Files/downloads/gnu/11.2-2022.02/binrel/gcc-arm-11.2-2022.02-x86_64-arm-none-eabi.tar.xz" | tar xvJ --strip 1 -C ~/gcc-arm-none-eabi
  - for t in ~/gcc-arm-none-eabi/bin/arm-none-eabi-*; do ln -sf $(which ccache) ~/bin/$(basename "$t"); done
  - export PATH=$PATH:~/gcc-arm-none-eabi/bin

_install-babblesim: &install-babblesim
  - sudo apt update && sudo apt-get -y install gcc-multilib libfftw3-dev
  # install newt
  - eval "$(gimme 1.16)"
  - go version
  - go get mynewt.apache.org/newt/newt@latest
  - newt version
  # install repo
  - curl -o ~/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
  - gpg --recv-key 8BB9AD793E8E6153AF0F9A4416530D5E920F5C65
  - curl -s https://storage.googleapis.com/git-repo-downloads/repo.asc | gpg --verify - ~/bin/repo
  - chmod +x ~/bin/repo
  # install babblesim
  - mkdir -p ~/nrfx && cd ~/nrfx
  - git clone --depth=1 https://github.com/NordicSemiconductor/nrfx.git .
  - mkdir -p ~/bsim && cd ~/bsim
  - git config --global color.ui false
  - repo init --depth=1 -u https://github.com/BabbleSim/manifest.git -m everything.xml -b master
  - repo sync
  - export NRFX_BASE=~/nrfx/
  - export BSIM_OUT_PATH=~/bsim/
  - export BSIM_COMPONENTS_PATH=${BSIM_OUT_PATH}/components/
  - make everything -j 8

_install-test: &install-test
  - sudo apt update && sudo apt-get -y install gcc-multilib
  # install newt
  - eval "$(gimme 1.16)"
  - go version
  - go get mynewt.apache.org/newt/newt@latest
  - newt version

_prepare-style: &prepare-style
  - cd ${TRAVIS_BUILD_DIR}
  - git fetch origin --deepen=100 refs/pull/$TRAVIS_PULL_REQUEST/head
  - git checkout -q FETCH_HEAD

_prepare-project: &prepare-project
  - mkdir -p ~/mynewt-ci && cd ~/mynewt-ci
  - git clone --depth=1 https://github.com/apache/mynewt-core.git repos/apache-mynewt-core
  - git clone --depth=1 https://github.com/apache/mynewt-mcumgr.git repos/apache-mynewt-mcumgr
  - git clone --depth=1 https://github.com/mcu-tools/mcuboot.git repos/mcuboot
  - git clone --depth=1 https://github.com/hathach/tinyusb.git repos/tinyusb
  - mv ${TRAVIS_BUILD_DIR} repos/apache-mynewt-nimble
  - cd repos/apache-mynewt-nimble
  - cp tests/project.yml ../..

_prepare-project-test: &prepare-test
  - mkdir -p ~/mynewt-ci && cd ~/mynewt-ci
  - git clone --depth=1 https://github.com/apache/mynewt-core.git repos/apache-mynewt-core
  - git clone --depth=1 https://github.com/apache/mynewt-mcumgr.git repos/apache-mynewt-mcumgr
  - git clone --depth=1 https://github.com/mcu-tools/mcuboot.git repos/mcuboot
  - git clone --depth=1 https://github.com/hathach/tinyusb.git repos/tinyusb
  - ln -s ${TRAVIS_BUILD_DIR} repos/apache-mynewt-nimble
  - cp repos/apache-mynewt-nimble/tests/project.yml .
  - newt target create unittest
  - newt target set unittest bsp=@apache-mynewt-core/hw/bsp/native
  - newt target set unittest build_profile=debug

jobs:
  include:
    - name: Style check
      env: CACHE=1
      if: type IN (pull_request)
      install: sudo apt update && sudo apt -y install uncrustify
      before_script: *prepare-style
      script: ./tests/scripts/check_style.py

    - name: Build targets (LL)
      env: CACHE=2
      install: *install-build
      before_script: *prepare-project
      script: ./tests/scripts/build_targets.py tests/targets/ll/

    - name: Build targets (samples)
      env: CACHE=3
      install: *install-build
      before_script: *prepare-project
      script: ./tests/scripts/build_targets.py targets/

    - name: BabbleSim
      env: CACHE=4
      install: *install-babblesim
      before_script: *prepare-project
      script: ./tests/scripts/build_targets.py babblesim/targets/

    - name: newt test
      env: CACHE=5
      install: *install-test
      before_script: *prepare-test
      script: newt test @apache-mynewt-nimble/nimble/host/test @apache-mynewt-nimble/nimble/controller/test
